{"version":3,"file":"static/webpack/static\\development\\pages\\speakers.js.7526d23bbef08ac06084.hot-update.js","sources":["webpack:///./pages/speakers.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SpeakerCard from \"../src/speakerCard\";\r\n\r\nimport getConfig from \"next/config\";\r\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig();\r\n\r\nclass Speakers extends React.Component {\r\n  static GetSpeakersUrl() {\r\n    return \"https://www.siliconvalley-codecamp.com/rest/speakers/ps\";\r\n  }\r\n  static async getInitialProps({ req }) {\r\n    const isServer = !!req;\r\n    if (isServer) {\r\n      var promise = axios\r\n        .get(Speakers.GetSpeakersUrl())\r\n        .then(response => {\r\n          return {\r\n            isLoading: false,\r\n            hasErrored: false,\r\n            speakerData: response.data\r\n          };\r\n        })\r\n        .catch(error => {\r\n          return {\r\n            hasErrored: true,\r\n            message: error.message\r\n          };\r\n        });\r\n      return promise;\r\n    } else {\r\n      return {\r\n        speakerData: [...Array(5)].map((_, i) => ({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          id: i\r\n        })),\r\n        isLoading: true\r\n      };\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: props.isLoading,\r\n      hasErrored: props.hasErrored,\r\n      message: props.message,\r\n      speakerData: props.speakerData\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(Speakers.GetSpeakersUrl())\r\n      .then(response => {\r\n        this.setState({\r\n          hasErrored: false,\r\n          isLoading: false,\r\n          speakerData: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          hasErrored: true,\r\n          isLoading: false,\r\n          speakerData: []\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"card-deck\">\r\n            {this.state.speakerData.map(speaker => (\r\n              <div\r\n                className=\"card col-4 cardmin margintopbottom20\"\r\n                key={speaker.id}\r\n              >\r\n                <SpeakerCard\r\n                  isLoading={this.state.isLoading}\r\n                  speaker={speaker}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Speakers;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AACA;AAAA;;;;;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AANA;AACA;;;;;;;;;;;;;;;AAUA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAeA;;;;AApFA;AACA;AAsFA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}